% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rehashSE.R
\name{rehashSE}
\alias{rehashSE}
\alias{dehydrateSummarizedExperiment}
\alias{rehashSummarizedExperiment}
\alias{dehydrateSE}
\title{anonymize (to some degree) a SummarizedExperiment (or an object of a class
derived from SummarizedExperiment) for quasi-public transfer/dissemination}
\usage{
rehashSE(x, salt = "0x", algo = "md5", deorder = T)
}
\arguments{
\item{x}{a \link{Ranged}SummarizedExperiment to anonymize}

\item{salt}{a salting phrase to slow brute-force metadata attacks ("0x")}

\item{algo}{algorithm to use for the one-way hash (default is "md5")}

\item{deorder}{scramble the rows and columns? (TRUE)}
}
\value{
\preformatted{     an object of the same class as x, but with hashed dimnames
}
}
\description{
This is NOT cryptographically secure nor equivalent to a proper 2-key de-ID!
Also, a separate function for rehash'ing SingleCellExperiments is imminent.
}
\examples{

nrows <- 200
ncols <- 6
counts <- matrix(runif(nrows * ncols, 1, 1e4), nrows)
rowRanges <- GRanges(rep(c("chr1", "chr2"), c(50, 150)),
                     IRanges(floor(runif(200, 1e5, 1e6)), width=100),
                     strand=sample(c("+", "-"), 200, TRUE),
                     feature_id=sprintf("ID\%03d", 1:200))
colData <- DataFrame(Treatment=rep(c("ChIP", "Input"), 3),
                     row.names=LETTERS[1:6])

rse <- SummarizedExperiment(assays=SimpleList(counts=counts),
                            rowRanges=rowRanges, colData=colData)
covs <- colData(rse)

deIDed <- rehash(rse, salt="testing", algo="md5")
meta <- metadata(deIDed)
metadata(deIDed) <- list() 

library(HDF5Array)
deIDedPath <- file.path(tempdir() , "deIDed") 
deIDed <- saveHDF5SummarizedExperiment(deIDed, deIDedPath)

reIDed <- dehash(deIDed, meta=meta, covs=covs)
reIDedPath <- file.path(tempdir() , "reIDed") 
reIDed <- saveHDF5SummarizedExperiment(deIDed, deIDedPath)
stopifnot(identical(colnames(reIDed), colnames(rse)))
stopifnot(identical(rownames(reIDed), rownames(rse)))

setMethod("counts", "SummarizedExperiment", 
  function(object) assay(object, which(names(assays(object)) == "counts")))

library(DelayedMatrixStats)
stopifnot(identical(colSums2(counts(reIDed)), colSums2(counts(rse))))
stopifnot(identical(rowSums2(counts(reIDed)), rowSums2(counts(rse))))
show(reIDed)

}
